version: '3.7'

services:
  nginx:
    build: ./nginx

    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
      - $HOME/midata/public:/home/app/web/midata
    ports:
      # external:internal (host:container)
      - 80:80
    depends_on:
      - web

  web:
    restart: always
    build:
      context: ./elasticproject
      dockerfile: Dockerfile
    container_name: django-qary
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./elasticproject/:/usr/src/elasticproject/
    ports: # only exposed to other local docker containers
      - 8000:8000
    depends_on:
      - elasticsearch

  elasticsearch:
    image: elasticsearch:7.6.1
    container_name: elasticsearch-qary
    volumes:
      - ./elasticsearch-docker/esdata:/usr/share/elasticsearch/data
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    ports:
      - "9300:9300"
      - "9200:9200"

  es1:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.2
    container_name: es1
    environment:
      - node.name=es1
      - cluster.name=es-docker-cluster
      # - discovery.seed_hosts=es2,es3
      # - cluster.initial_master_nodes=es1,es2,es3
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    # networks:
    #   - elastic


volumes:
  
  # static_volume:
  # media_volume:
  elasticproject:
  # midata:
  esdata:


