version: '3.6'

services:

  nginx:
    build: ./nginx
    env_file:
      - ./.env.prod
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
      - $HOME/midata/public:/home/app/web/midata
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      # external:internal (host:container)
      - "80:80"
      - "443:443"
    command: "/bin/sh -c 'while :; do sleep 7h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    depends_on:
      - web

  web:
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    command: ['gunicorn', 'main_app.wsgi:application', '-t', '240', '-b', '0.0.0.0:8000']
    volumes:
      - "static_volume:/home/app/web/staticfiles"
      - "media_volume:/home/app/web/mediafiles"
    expose: # only exposed to other local docker containers
      - 8000
    env_file:
      - ./.env.prod
    depends_on:
      - db
      - es
      - redis

  redis:
    image: redis:alpine
    container_name: rz01
    expose:
      - 6379
    # ports:
    #   - "6379:6379"
    # networks:
    #   - djangonetwork

  certbot:
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 23h & wait $${!}; done;'"
    depends_on:
      - nginx

  db:
    image: postgres:12.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.db.prod

  es:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.2
    container_name: es
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    expose:
      - 9200
    ports:
      - 9200:9200


volumes:
  postgres_data:
  static_volume:
  media_volume:
  midata:
  esdata:


